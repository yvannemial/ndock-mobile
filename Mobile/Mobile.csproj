<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net8.0-android;net8.0-ios</TargetFrameworks>
		<!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->
		<!-- <TargetFrameworks>$(TargetFrameworks);net9.0-tizen</TargetFrameworks> -->

		<!-- Note for MacCatalyst:
        The default runtime is maccatalyst-x64, except in Release config, in which case the default is maccatalyst-x64;maccatalyst-arm64.
        When specifying both architectures, use the plural <RuntimeIdentifiers> instead of the singular <RuntimeIdentifier>.
        The Mac App Store will NOT accept apps with ONLY maccatalyst-arm64 indicated;
        either BOTH runtimes must be indicated or ONLY macatalyst-x64. -->
		<!-- For example: <RuntimeIdentifiers>maccatalyst-x64;maccatalyst-arm64</RuntimeIdentifiers> -->

		<OutputType>Exe</OutputType>
		<RootNamespace>Mobile</RootNamespace>
		<UseMaui>true</UseMaui>
		<SingleProject>true</SingleProject>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>

		<!-- Display name -->
		<ApplicationTitle>Ndock</ApplicationTitle>

		<!-- App Identifier -->
		<ApplicationId>cm.ndock.mobile</ApplicationId>

		<!-- Versions -->
		<ApplicationDisplayVersion>1.0</ApplicationDisplayVersion>
		<ApplicationVersion>1</ApplicationVersion>

		<!-- To develop, package, and publish an app to the Microsoft Store, see: https://aka.ms/MauiTemplateUnpackaged -->
		<WindowsPackageType>None</WindowsPackageType>

		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">15.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">15.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">21.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
		<TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tizen'">6.5</SupportedOSPlatformVersion>
		<AssemblyName>Ndock</AssemblyName>
	</PropertyGroup>

	<ItemGroup>
		<!-- App Icon -->
		<MauiIcon Include="Resources\AppIcon\appicon.svg" ForegroundFile="Resources\AppIcon\appiconfg.svg" Color="#f9f0e1" />

		<!-- Splash Screen -->
		<MauiSplashScreen Include="Resources\Splash\splash.svg" Color="#f9f0e1" BaseSize="128,128" />

		<!-- Images -->
		<MauiImage Include="Resources\Images\*" />
		<MauiImage Update="Resources\Images\dotnet_bot.png" Resize="True" BaseSize="300,185" />

		<!-- Custom Fonts -->
		<MauiFont Include="Resources\Fonts\*" />

		<!-- Raw Assets (also remove the "Resources\Raw" prefix) -->
		<MauiAsset Include="Resources\Raw\**" LogicalName="%(RecursiveDir)%(Filename)%(Extension)" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="CommunityToolkit.Maui" Version="9.1.1" />
		<PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="9.0.4" />
		<PackageReference Include="The49.Maui.BottomSheet" Version="8.0.3" />
	</ItemGroup>

	<ItemGroup>
		<Compile Update="Pages\CartSheet.xaml.cs">
			<DependentUpon>CartPage.xaml</DependentUpon>
		</Compile>
		<Compile Update="Pages\CheckoutPage.xaml.cs">
		  <DependentUpon>CheckoutPage.xaml</DependentUpon>
		</Compile>
		<Compile Update="Pages\DishPage.xaml.cs">
			<DependentUpon>DishPage.xaml</DependentUpon>
		</Compile>
		<Compile Update="Pages\FavoritesPage.xaml.cs">
			<DependentUpon>FavoritesPage.xaml</DependentUpon>
		</Compile>
		<Compile Update="Pages\LoginPage.xaml.cs">
			<DependentUpon>LoginPage.xaml</DependentUpon>
		</Compile>
		<Compile Update="Pages\ProfilePage.xaml.cs">
			<DependentUpon>ProfilePage.xaml</DependentUpon>
		</Compile>
		<Compile Update="Pages\RegisterPage.xaml.cs">
			<DependentUpon>RegisterPage.xaml</DependentUpon>
		</Compile>
		<Compile Update="Views\MenuItemView.xaml.cs">
			<DependentUpon>MenuItemView.xaml</DependentUpon>
		</Compile>
	</ItemGroup>

	<ItemGroup>
		<MauiXaml Update="Pages\CartSheet.xaml">
			<Generator>MSBuild:Compile</Generator>
		</MauiXaml>
		<MauiXaml Update="Pages\CheckoutPage.xaml">
		  <Generator>MSBuild:Compile</Generator>
		</MauiXaml>
		<MauiXaml Update="Pages\FavoritesPage.xaml">
			<Generator>MSBuild:Compile</Generator>
		</MauiXaml>
		<MauiXaml Update="Pages\LoginPage.xaml">
			<Generator>MSBuild:Compile</Generator>
		</MauiXaml>
		<MauiXaml Update="Pages\ProfilePage.xaml">
			<Generator>MSBuild:Compile</Generator>
		</MauiXaml>
		<MauiXaml Update="Pages\RegisterPage.xaml">
			<Generator>MSBuild:Compile</Generator>
		</MauiXaml>
		<MauiXaml Update="Views\MenuItemView.xaml">
			<Generator>MSBuild:Compile</Generator>
		</MauiXaml>
	</ItemGroup>

	<ItemGroup>
		<Folder Include="Assets\" />
		<Folder Include="Services\" />
	</ItemGroup>

	<ItemGroup Condition="'$(TargetFramework)' == 'net8.0-android'">
	  <PackageReference Include="Mapbox.Maui">
	    <Version>11.8.0-alpha03</Version>
	  </PackageReference>
	</ItemGroup>

	<ItemGroup Condition="'$(TargetFramework)' == 'net8.0-ios'">
	  <PackageReference Include="Mapbox.Maui">
	    <Version>11.8.0-alpha03</Version>
	  </PackageReference>
	</ItemGroup>

	<PropertyGroup>
		<MAPBOX_DOWNLOADS_TOKEN>sk.eyJ1IjoibmEyYXhsIiwiYSI6ImNtOXp2czk0ajAxa2UybXNhb2xxdTU0eGIifQ.w8o_emcHQOXUIpHHfUt79w</MAPBOX_DOWNLOADS_TOKEN>
	</PropertyGroup>
	<ItemGroup>
		<GradleRepository Include="https://api.mapbox.com/downloads/v2/releases/maven">
			<Repository>
				maven {
					url = uri("https://api.mapbox.com/downloads/v2/releases/maven")
					authentication {
						create&lt;BasicAuthentication&gt;("basic")
					}
					credentials {
						// Do not change the username below.
						// This should always be `mapbox` (not your username).
						username = "mapbox"
						// Use the secret token you stored in gradle.properties as the password
						password = providers.gradleProperty("MAPBOX_DOWNLOADS_TOKEN").get()
					}
				}
			</Repository>
		</GradleRepository>
	</ItemGroup>
</Project>
